# https://github.com/HumanSignal/label-studio/blob/develop/docker-compose.yml

services:
  nginx:
    build: .
    image: heartexlabs/label-studio:latest
    restart: unless-stopped
    ports:
      - "8080:8085"
      - "8081:8086"
    depends_on:
      - app
    environment:
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-}
    #   Optional: Specify SSL termination certificate & key
    #   Just drop your cert.pem and cert.key into folder 'deploy/nginx/certs'
    #      - NGINX_SSL_CERT=/certs/cert.pem
    #      - NGINX_SSL_CERT_KEY=/certs/cert.key
    volumes:
      - label-studio-data:/label-studio/data:rw
      # - ./deploy/nginx/certs:/certs:ro
      #   Optional: Override nginx default conf
      #      - ./deploy/my.conf:/etc/nginx/nginx.conf
    command: nginx

  app:
    stdin_open: true
    tty: true
    build: .
    image: heartexlabs/label-studio:latest
    restart: unless-stopped
    expose:
      - "8000"
    depends_on:
      - db
    environment:
      - DJANGO_DB=default
      - POSTGRE_NAME=postgres
      - POSTGRE_USER=postgres
      - POSTGRE_PASSWORD=
      - POSTGRE_PORT=5432
      - POSTGRE_HOST=db
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-}
      - JSON_LOG=1
    #      - LOG_LEVEL=DEBUG
    volumes:
      - label-studio-data:/label-studio/data:rw
    command: label-studio-uwsgi

  # https://github.com/HumanSignal/label-studio-ml-backend/blob/master/label_studio_ml/examples/mmdetection-3/docker-compose.yml
  mmdetection-3:
    container_name: mmdetection-3
    image: heartexlabs/label-studio-ml-backend:mmdetection3-master
    restart: unless-stopped
    depends_on:
      - app
    environment:
      # specify these parameters if you want to use basic auth for the model server
      - BASIC_AUTH_USER=
      - BASIC_AUTH_PASS=
      # set the log level for the model server
      - LOG_LEVEL=DEBUG
      # specify the number of workers and threads for the model server
      - WORKERS=1
      - THREADS=8
      # specify the model directory (likely you don't need to change this)
      - MODEL_DIR=/data/models
      # mmdetection model parameters
      # - CHECKPOINT_FILE=yolov3_mobilenetv2_320_300e_coco_20210719_215349-d18dff72.pth
      # - CONFIG_FILE=yolov3_mobilenetv2_8xb24-320-300e_coco.py
      - CHECKPOINT_FILE=/data/models/rtmdet_l_8xb32-300e_coco_20220719_112030-5a0be7c4.pth
      - CONFIG_FILE=/data/models/rtmdet_l_8xb32-300e_coco.py 
      # - CHECKPOINT_FILE=/data/models/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
      # - CONFIG_FILE=/data/models/rtmdet_tiny_8xb32-300e_coco.py 
      - DEVICE=cpu
      - SCORE_THRESHOLD=0.5

      # Specify the Label Studio URL and API key to access
      # uploaded, local storage and cloud storage files.
      # Do not use 'localhost' as it does not work within Docker containers.
      # Use prefix 'http://' or 'https://' for the URL always.
      # Determine the actual IP using 'ifconfig' (Linux/Mac) or 'ipconfig' (Windows).
      - LABEL_STUDIO_URL=http://app:8000/
      - LABEL_STUDIO_API_KEY=${LABEL_STUDIO_API_KEY}

      # for s3 storage you can specify AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY,
      # it will work faster than using intermediate LS API for your file URL resolving from s3
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
    ports:
      - "9090:9090"
    volumes:
      - "models:/data"

  db:
    image: pgautoupgrade/pgautoupgrade:13-alpine
    hostname: db
    restart: unless-stopped
    # Optional: Enable TLS on PostgreSQL
    # Just drop your server.crt and server.key into folder 'deploy/pgsql/certs'
    # NOTE: Both files must have permissions u=rw (0600) or less
    #    command: >
    #      -c ssl=on
    #      -c ssl_cert_file=/var/lib/postgresql/certs/server.crt
    #      -c ssl_key_file=/var/lib/postgresql/certs/server.key
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ${POSTGRES_DATA_DIR:-./postgres-data}:/var/lib/postgresql/data
      # - ./deploy/pgsql/certs:/var/lib/postgresql/certs:ro


volumes:
  label-studio-data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=192.168.0.7,rw,nfsvers=4"
      device: ":/data/label-studio"

  models:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=192.168.0.7,rw,nfsvers=4"
      device: ":/data/models"
